environment:
  AV_PROJECTS: 'c:\projects'
  AV_XERCES_SOURCE: 'c:\projects\xerces-c-source'
  AV_XERCES_BUILD: 'c:\projects\xerces-c-build'
  AV_XERCES_INSTALL: 'c:\projects\xerces-c'
  AV_XALAN_DOWNLOAD: 'c:\projects\download'
  AV_XALAN_TOOLS: 'c:\projects\tools'
  AV_XALAN_SOURCE: 'c:\projects\xalan-c'
  AV_XALAN_BUILD: 'c:\projects\build'
  AV_XALAN_INSTALL: 'c:/projects/libs'

  matrix:
#    - compiler: cygwin
#      configuration: Release
#      generator: Unix Makefiles
#      shared: ON
#      msgloader: inmemory
#      transcoder: default
#    - compiler: cygwin
#      configuration: Debug
#      generator: Unix Makefiles
#      shared: OFF
#      msgloader:
#      transcoder:    - compiler: mingw
#      configuration: Release
#      generator: Ninja
#      shared: ON
#      msgloader: inmemory
#      transcoder:
#    - compiler: mingw
#      configuration: Debug
#      generator: Ninja
#      shared: OFF
#      msgloader:
#      transcoder: default
    - compiler: vc15
      configuration: Release
      generator: Visual Studio 15 2017 Win64
      shared: ON
      msgloader:
      transcoder:
#    - compiler: vc15
#      configuration: Debug
#      generator: Visual Studio 15 2017 Win64
#      shared: OFF
#      msgloader: inmemory
#      transcoder: icu

cache:
  - 'c:\projects\download -> scripts/ci-appveyor-setup'
  - 'c:\projects\icu -> scripts/ci-appveyor-setup'
  - 'c:\projects\xerces-c -> scripts/ci-appveyor-setup'
  - 'c:\tools\vcpkg\installed -> scripts/ci-appveyor-setup'

# Operating system (build VM template)
os: 'Visual Studio 2017'

# clone directory
clone_folder: 'c:\projects\xalan-c'
clone_depth: 5

platform: x64

init:
  - set
  - git config --global core.autocrlf input
  - 'FOR /F "tokens=* USEBACKQ" %%F IN (`C:\cygwin64\bin\cygpath -u %AV_XERCES_SOURCE%`) DO SET AV_XERCES_CYG_SOURCE=%%F'
  - 'FOR /F "tokens=* USEBACKQ" %%F IN (`C:\cygwin64\bin\cygpath -u %AV_XERCES_INSTALL%`) DO SET AV_XERCES_CYG_INSTALL=%%F'
  - 'FOR /F "tokens=* USEBACKQ" %%F IN (`C:\cygwin64\bin\cygpath -u %AV_XALAN_DOWNLOAD%`) DO SET AV_XALAN_CYG_DOWNLOAD=%%F'
  - 'FOR /F "tokens=* USEBACKQ" %%F IN (`C:\cygwin64\bin\cygpath -u %AV_XALAN_TOOLS%`) DO SET AV_XALAN_CYG_TOOLS=%%F'
  - 'FOR /F "tokens=* USEBACKQ" %%F IN (`C:\cygwin64\bin\cygpath -u %AV_XALAN_SOURCE%`) DO SET AV_XALAN_CYG_SOURCE=%%F'
  - 'FOR /F "tokens=* USEBACKQ" %%F IN (`C:\cygwin64\bin\cygpath -u %AV_XALAN_INSTALL%`) DO SET AV_XALAN_CYG_INSTALL=%%F'
  - 'if NOT EXIST "%AV_XALAN_DOWNLOAD%\" mkdir %AV_XALAN_DOWNLOAD%'
  - 'if NOT EXIST "%AV_XALAN_TOOLS%\" mkdir %AV_XALAN_TOOLS%'
  - 'if %compiler%==cygwin C:\Cygwin64\setup-x86_64 -q -R C:\Cygwin64 -s http://cygwin.mirror.constant.com -l %AV_XALAN_DOWNLOAD%\cygwin -P libcurl-devel,cmake'
  - set AV_DO_ICU_BUILD=false
  - set AV_DO_XERCES_BUILD=true
  - if [%msgloader%] == [icu] set AV_DO_ICU_BUILD=true
  - if [%transcoder%] == [icu] set AV_DO_ICU_BUILD=true
  - if [%compiler%] == [vc15] set AV_DO_XERCES_BUILD=false
  - if [%compiler%] == [vc15] set AV_DO_ICU_BUILD=false
  - 'if EXIST "%AV_PROJECTS%\icu" AV_DO_ICU_BUILD=false'
  - 'if EXIST "%AV_PROJECTS%\xerces-c" AV_DO_XERCES_BUILD=false'
  - 'set "PATH=C:\Program Files (x86)\cmake\bin;%AV_XALAN_TOOLS%;%PATH%"'
  - 'if %compiler%==cygwin set "PATH=C:\Cygwin64\bin;%PATH%"'
  - 'if %compiler%==mingw set "PATH=C:\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin;%PATH%"'
  - 'if %compiler%==mingw set CC=C:\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc'
  - 'if %compiler%==mingw set CXX=C:\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\g++'
  - set "AV_CMAKE_ARGS=-DBUILD_SHARED_LIBS:BOOL=%shared%"
  - 'if %compiler%==vc15 set "AV_CMAKE_ARGS=%AV_CMAKE_ARGS% -DCMAKE_TOOLCHAIN_FILE:PATH=C:\tools\vcpkg\scripts\buildsystems\vcpkg.cmake"'
  - if NOT [%msgloader%] == [] set "AV_CMAKE_ARGS=%AV_CMAKE_ARGS% -Dmessage-loader=%msgloader%"
  - if NOT [%transcoder%] == [] set "AV_CMAKE_ARGS=%AV_CMAKE_ARGS% -Dtranscoder=%transcoder%"
  - set "AV_XERCES_CMAKE_SOURCE=%AV_XERCES_SOURCE%"
  - set "AV_XERCES_CMAKE_INSTALL=%AV_XERCES_INSTALL%"
  - 'if %compiler%==cygwin set "AV_XERCES_CMAKE_SOURCE=%AV_XERCES_CYG_SOURCE%'
  - 'if %compiler%==cygwin set "AV_XERCES_CMAKE_INSTALL=%AV_XERCES_CYG_INSTALL%'
  - set "AV_XALAN_CMAKE_SOURCE=%AV_XALAN_SOURCE%"
  - set "AV_XALAN_CMAKE_INSTALL=%AV_XALAN_INSTALL%"
  - 'if %compiler%==cygwin set "AV_XALAN_CMAKE_SOURCE=%AV_XALAN_CYG_SOURCE%'
  - 'if %compiler%==cygwin set "AV_XALAN_CMAKE_INSTALL=%AV_XALAN_CYG_INSTALL%'

before_build:
  - 'C:\cygwin64\bin\bash %AV_XALAN_CYG_SOURCE%/scripts/ci-appveyor-setup'
  - set ICU_PLATFORM=x64
  - if [%platform%] == [x86] set ICU_PLATFORM=Win32
  - 'if [%AV_DO_ICU_BUILD%] == [true] cd "%AV_PROJECTS%\icu"'
  - 'if [%AV_DO_ICU_BUILD%] == [true] echo "Running msbuild to build ICU"'
  - 'if [%AV_DO_ICU_BUILD%] == [true] call "%VS140COMNTOOLS%..\..\VC\vcvarsall.bat" %platform%'
  - 'if [%AV_DO_ICU_BUILD%] == [true] msbuild source\allinone\allinone.sln /p:Configuration=%configuration% /p:Platform=%ICU_PLATFORM% /m'
  - 'if [%AV_DO_ICU_BUILD%] == [true] set "PATH=%AV_PROJECTS%\icu\bin;%AV_PROJECTS%\icu\bin64;%PATH%"'
  - mkdir %AV_XERCES_BUILD%
  - cd %AV_XERCES_BUILD%
  - if [%AV_DO_XERCES_BUILD%] == [true] cmake -G "%generator%" -DCMAKE_INSTALL_PREFIX:PATH=%AV_XERCES_CMAKE_INSTALL% -DCMAKE_BUILD_TYPE=%configuration% "%AV_XERCES_CMAKE_SOURCE%"
  - if [%AV_DO_XERCES_BUILD%] == [true] cd %AV_XERCES_BUILD%
  - if [%AV_DO_XERCES_BUILD%] == [true] cmake --build . --config %configuration%
  - if [%AV_DO_XERCES_BUILD%] == [true] cmake --build . --config %configuration% --target install
  - 'set "PATH=%AV_XERCES_CMAKE_INSTALL%\bin;%PATH%"'
  - 'set "PREFIX_PATH=%AV_XERCES_INSTALL%;%AV_PROJECTS%\icu"'
  - 'if %compiler%==cygwin set "PREFIX_PATH=/cygdrive/c/projects/xerces-c:/cygdrive/c/projects/icu"'
  - 'echo CPP: %CMAKE_PREFIX_PATH%'
  - mkdir %AV_XALAN_BUILD%
  - cd %AV_XALAN_BUILD%
  - echo Running cmake -G "%generator%" "-DCMAKE_PREFIX_PATH:PATH=%PREFIX_PATH%" "-DCMAKE_INSTALL_PREFIX:PATH=%AV_XALAN_CMAKE_INSTALL%" -DCMAKE_BUILD_TYPE=%configuration% "%AV_XALAN_CMAKE_SOURCE%"
  - cmake -G "%generator%" "-DCMAKE_PREFIX_PATH:PATH=%PREFIX_PATH%" "-DCMAKE_INSTALL_PREFIX:PATH=%AV_XALAN_CMAKE_INSTALL%" -DCMAKE_BUILD_TYPE=%configuration% %AV_CMAKE_ARGS% "%AV_XALAN_CMAKE_SOURCE%"

build_script:
  - cd %AV_XALAN_BUILD%
  - cmake --build . --config %configuration%
  - cmake --build . --config %configuration% --target install

after_build:
  - cd %AV_XALAN_INSTALL%
  - '7z a %AV_XALAN_SOURCE%\xalan-c.zip * -tzip'

before_test:
  - cd %AV_XALAN_BUILD%
  - ctest -V -C %configuration%
